# Copyright Jiaqi Liu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
name: CI/CD

"on":
  pull_request:
  push:
    branches:
      - master

env:
  USER: QubitPi
  EMAIL: jack20220723@gmail.com
  NODE_VERSION: 18

jobs:
  cancel-previous:
    name: Cancel Previous Runs In Order to Allocate Action Resources Immediately for Current Run
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.10.1
        with:
          access_token: ${{ github.token }}

  list-e2e-specs:
    name: Enumerate E2E tests and prepare to run them in parallel
    runs-on: ubuntu-latest
    outputs:
      paths: ${{ steps.list-e2e-specs.outputs.paths }}
    steps:
      - name: List Files
        id: list-e2e-specs
        uses: mirko-felice/list-files-action@v3.0.5
        with:
          repo: ${{ github.repository }}
          ref: ${{ github.ref }}
          path: "cypress/e2e"
          ext: ".ts"

  e2e-tests:
    name: E2E Tests
    needs: list-e2e-specs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_spec: ${{ fromJson(needs.list-e2e-specs.outputs.paths) }}
        mode: ["dev", "prod"]
        node_version: [18]
    steps:
      - uses: actions/checkout@v3
      - name: Set node version to ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm install -g yarn@1.22.19 && yarn
      - name: Load test .env file
        run: mv .env.test .env
      - name: Start app in ${{ matrix.mode }} mode
        run: |
          yarn global add wait-on
          
          if [[ ${{ matrix.mode }} == 'dev' ]]; then
              yarn start &
          else
              yarn build
              npm install -g serve
              serve -s build -l 3000 &
          fi
      - name: Wait until app is up and running
        run: wait-on http://127.0.0.1:3000
      - name: Run E2E tests
        run: yarn e2e --spec "${{ matrix.test_spec }}"
      - id: extract-spec-filename
        if: failure()
        run: |
          id=$(echo "${{ matrix.test_spec }}" | sed s:/:_:g)
          echo "::set-output name=id::$id"
      - name: Upload test videos and screenshots on test failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.mode }}-${{steps.extract-spec-filename.outputs.id}}-${{ env.NODE_VERSION }}
          path: |
            ./cypress/videos
            ./cypress/screenshots

  deploy:
    name: Deploy to GitHub Pages
    needs: [e2e-tests]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set node version to ${{ env.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
      - name: Install dependencies
        run:  npm install -g yarn@1.22.19 && yarn
      - name: Load .env file
        run: mv .env.prod .env
      - name: Test production build
        run: yarn build
      - name: Upload sourcemaps to sentry.io
        run: yarn sentry:sourcemaps
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      - name: Load CNAME
        run: cp CNAME build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build
          enable_jekyll: false
          user_name: ${{ env.USER }}
          user_email: ${{ env.EMAIL }}
